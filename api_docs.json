{
    "openapi": "3.0.3",
    "info": {
        "title": "Rescate UAM - OpenAPI 3.0",
        "description": "Esta es la documentación de la API de Rescate UAM, plataforma móvil diseñada para optimizar la coordinación y respuesta durante situaciones de riesgo. \n La aplicación permitirá a los administradores gestionar la infraestructura y los protocolos de seguridad, además facilitará el trabajo del comité encargado de la gestión de riesgos, compuesto por brigadistas y responsables de seguridad, quienes son los principales usuarios del sistema.",
        "contact": {
            "name": "Just Two Devs",
            "email": "tomas.trejosg@autonoma.edu.co"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Servidor de desarrollo"
        }
    ],
    "tags": [
        {
            "name": "Autenticación",
            "description": "Operaciones relacionadas con la autenticación"
        },
        {
            "name": "Roles",
            "description": "Operaciones relacionadas con los roles"
        },
        {
            "name": "Usuarios",
            "description": "Operaciones relacionadas con los usuarios"
        },
        {
            "name": "Instituciones",
            "description": "Operaciones relacionadas con las instituciones"
        },
        {
            "name": "Zonas",
            "description": "Operaciones relacionadas con las zonas"
        },
        {
            "name": "Niveles",
            "description": "Operaciones relacionadas con los niveles"
        },
        {
            "name": "Salas",
            "description": "Operaciones relacionadas con las salas"
        },
        {
            "name": "Puntos de encuentro",
            "description": "Operaciones relacionadas con los puntos de encuentro"
        },
        {
            "name": "Situaciones de riesgo",
            "description": "Operaciones relacionadas con los situaciones de riesgo"
        },
        {
            "name": "Protocolos",
            "description": "Operaciones relacionadas con los protocolos"
        },
        {
            "name": "Brigadistas",
            "description": "Operaciones relacionadas con los brigadistas"
        },
        {
            "name": "Incidentes",
            "description": "Operaciones relacionadas con los incidentes"
        },
        {
            "name": "Reportes de usuarios",
            "description": "Operaciones relacionadas con los reporte de usuarios"
        }
    ],
    "paths": {
        "/auth/login": {
            "post": {
                "tags": ["Autenticación"],
                "summary": "Iniciar sesión",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 100
                                    },
                                    "device_name": {
                                        "type": "string",
                                        "maxLength": 100
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inicio de sesión exitoso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Inicio de sesión exitoso."
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|54GkTOpBCkyB1rElmo8e8dBaaPK9dXgZC52SdZ3H8077b029"
                                        },
                                        "user": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Credenciales incorrectas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Las credenciales proporcionadas son incorrectas."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Credenciales incorrectas"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": ["Autenticación"],
                "summary": "Cerrar sesión",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cierre de sesión exitoso",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario cerró sesión correctamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "tags": ["Roles"],
                "summary": "Listar roles",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PerPage"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Roles"],
                "summary": "Crear rol",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "Admin"
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "nullable": true,
                                        "example": "Rol de administrador"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rol creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rol creado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/roles/{role}": {
            "get": {
                "tags": ["Roles"],
                "summary": "Obtener rol",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Role"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rol obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Roles"],
                "summary": "Actualizar rol",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Role"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rol actualizado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Role"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Rol actualizado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Roles"],
                "summary": "Eliminar rol",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Role"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rol eliminado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rol eliminado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede eliminar el rol",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No se puede eliminar el rol porque algunos usuarios tienen este rol asignado."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": ["Usuarios"],
                "summary": "Listar usuarios",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PerPage"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    },
                    {
                        "$ref": "#/components/parameters/LastName"
                    },
                    {
                        "$ref": "#/components/parameters/Email"
                    },
                    {
                        "$ref": "#/components/parameters/IDCard"
                    },
                    {
                        "$ref": "#/components/parameters/RHGB"
                    },
                    {
                        "$ref": "#/components/parameters/SocialSecurity"
                    },
                    {
                        "$ref": "#/components/parameters/PhoneNumber"
                    },
                    {
                        "$ref": "#/components/parameters/IsActive"
                    },
                    {
                        "$ref": "#/components/parameters/Code"
                    },
                    {
                        "$ref": "#/components/parameters/RoleID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuarios obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Usuarios"],
                "summary": "Crear usuario",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "name",
                                    "last_name",
                                    "email",
                                    "id_card",
                                    "institution_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "Carlos Andres"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "Páez Chicangana"
                                    },
                                    "email": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "format": "email",
                                        "example": "carlosa.paezc@autonoma.edu.co",
                                        "pattern": "\\/([^@]+)@autonoma\\.edu\\.co/i"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "maxLength": 100,
                                        "example": "hola123"
                                    },
                                    "id_card": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "example": "1234567890"
                                    },
                                    "rhgb": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "example": "O+"
                                    },
                                    "social_security": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "SURA"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "example": "3108925614"
                                    },
                                    "code": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "l155"
                                    },
                                    "photo": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "institution_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Usuario creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario creado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/users/{user}": {
            "get": {
                "tags": ["Usuarios"],
                "summary": "Obtener usuario",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "post": {
                "tags": ["Usuarios"],
                "summary": "Actualizar usuario.\nSi se desea actualizar el 'code' se debe enviar el 'institution_id'; sino se quiere actualizar el 'code' no es necesario enviar el 'institution_id'.\nSi se envia el campo 'secondary_emails' estos deben ser diferentes al email principal y no deben estar repetidos, pero si también se envia el email principal este debe ser diferente a los secundarios y viceversa.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": ["_method"],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "enum": ["PUT"]
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "id_card": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "rhgb": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "nullable": true
                                    },
                                    "social_security": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "nullable": true
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "nullable": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "nullable": true
                                    },
                                    "code": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "photo": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "institution_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "secondary_emails": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Usuario actualizado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario actualizado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Usuarios"],
                "summary": "Eliminar usuario",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario eliminado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario eliminado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "tags": ["Usuarios"],
                "parameters": [
                    { "$ref": "#/components/parameters/InstitutionQuery" }
                ],
                "summary": "Obtener perfil",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario recuperado/a exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    }
                }
            },
            "post": {
                "tags": ["Usuarios"],
                "summary": "Actualizar usuario en sesión.\nSi se desea actualizar el 'code' se debe enviar el 'institution_id'; sino se quiere actualizar el 'code' no es necesario enviar el 'institution_id'.\nSi se envia el campo 'secondary_emails' estos deben ser diferentes al email principal y no deben estar repetidos, pero si también se envia el email principal este debe ser diferente a los secundarios y viceversa.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": ["_method"],
                                "properties": {
                                    "_method": {
                                        "type": "string",
                                        "enum": ["PUT"]
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "email": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "id_card": {
                                        "type": "string",
                                        "maxLength": 20,
                                        "nullable": true
                                    },
                                    "rhgb": {
                                        "type": "string",
                                        "maxLength": 2,
                                        "nullable": true
                                    },
                                    "social_security": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "nullable": true
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "maxLength": 10,
                                        "nullable": true
                                    },
                                    "code": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "photo": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "institution_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "secondary_emails": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Perfil actualizado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Perfil actualizado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/institutions": {
            "get": {
                "tags": ["Instituciones"],
                "summary": "Listar instituciones",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/PerPage"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Instituciones obtenidas exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Institution"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Instituciones"],
                "summary": "Crear institución",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 100,
                                        "example": "UAM"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "Universidad Autonoma de Manizales"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Institución creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Institution"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Institución creada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/institutions/{institution}": {
            "get": {
                "tags": ["Instituciones"],
                "summary": "Obtener institución. Esta URI tiene como objetivo ser llamada al momento de iniciar la aplicación con el fin de conocer el estado de la institución (Su información y si hay algun incidente activo).",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Institución obtenida exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Institution"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Instituciones"],
                "summary": "Actualizar institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Institución actualizada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Institution"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Institución actualizada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Instituciones"],
                "summary": "Eliminar institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Institución eliminada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Institución eliminada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede eliminar la institución",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El/La institución no puede ser eliminado/a porque tiene recursos relacionados: zonas, niveles, salas, puntos de encuentro, situaciones de riesgo, protocolos, incidentes."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/rooms": {
            "get": {
                "tags": ["Instituciones"],
                "summary": "Listar salas de una institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salas obtenidas exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Room"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/protocols": {
            "get": {
                "tags": ["Instituciones"],
                "summary": "Listar protocolos de una institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Protocolos obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Protocol"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/incidents": {
            "get": {
                "tags": ["Instituciones"],
                "summary": "Listar incidentes de una institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Incidentes obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Incident"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/users": {
            "get": {
                "tags": ["Instituciones"],
                "summary": "Listar usuarios de una institución. Si se quiere obtener todos los brigadistas de la institución se debe enviar el parametro 'role_id' con el valor 2.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    },
                    {
                        "$ref": "#/components/parameters/LastName"
                    },
                    {
                        "$ref": "#/components/parameters/Email"
                    },
                    {
                        "$ref": "#/components/parameters/IDCard"
                    },
                    {
                        "$ref": "#/components/parameters/RHGB"
                    },
                    {
                        "$ref": "#/components/parameters/SocialSecurity"
                    },
                    {
                        "$ref": "#/components/parameters/PhoneNumber"
                    },
                    {
                        "$ref": "#/components/parameters/IsActive"
                    },
                    {
                        "$ref": "#/components/parameters/Code"
                    },
                    {
                        "$ref": "#/components/parameters/RoleID"
                    },
                    {
                        "$ref": "#/components/parameters/PerPage"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuarios obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/users/{user}": {
            "get": {
                "tags": ["Instituciones"],
                "summary": "Obtener usuario de una Institución en particular",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/User"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuario obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/users/{user}/reports": {
            "get": {
                "tags": ["Instituciones"],
                "summary": "Listar los reportes de un usuario en una institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/User"
                    },
                    {
                        "$ref": "#/components/parameters/PerPage"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reportes obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserReport"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/users/stats": {
            "get": {
                "tags": ["Instituciones"],
                "summary": "Obtener el estatus de todos los usuarios de la institución durante el incidente activo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estadisticas obtenidas exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Carlos Andres"
                                                    },
                                                    "last_name": {
                                                        "type": "string",
                                                        "example": "Páez"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "carlosa.paezc@autonoma.edu.co"
                                                    },
                                                    "id_card": {
                                                        "type": "string",
                                                        "example": "1234567890"
                                                    },
                                                    "rhgb": {
                                                        "type": "string",
                                                        "example": "O+"
                                                    },
                                                    "social_security": {
                                                        "type": "string",
                                                        "example": "SURA"
                                                    },
                                                    "phone_number": {
                                                        "type": "string",
                                                        "example": "3108925614"
                                                    },
                                                    "is_active": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "123456"
                                                    },
                                                    "role_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "photo_path": {
                                                        "type": "string",
                                                        "example": "/storage/users/1.jpg"
                                                    },
                                                    "role": {
                                                        "type": "object",
                                                        "$ref": "#/components/schemas/Role"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "enum": [
                                                            "safe",
                                                            "at_risk",
                                                            "outside"
                                                        ],
                                                        "example": "at_risk"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "example": "Edificio Fundadores"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Todo esta en llamas, ayuda"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/zones": {
            "get": {
                "tags": ["Zonas"],
                "summary": "Listar zonas de una institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Zonas obtenidas exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Zone"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Zonas"],
                "summary": "Crear zona",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "Fundadores"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "Edificio Fundadores"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Zona creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Zone"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Zona creada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/institutions/{institution}/zones/{zone}": {
            "get": {
                "tags": ["Zonas"],
                "summary": "Obtener zona",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Zone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Zona obtenida exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Zone"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Zonas"],
                "summary": "Actualizar zona",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Zone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Zona actualizada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Zone"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Zona actualizada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Zonas"],
                "summary": "Eliminar zona",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Zone"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Zona eliminada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Zona eliminada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede eliminar la zona",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El/La zona no puede ser eliminado/a porque tiene recursos relacionados: salas, puntos de encuentro."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/levels": {
            "get": {
                "tags": ["Niveles"],
                "summary": "Listar niveles de una institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Niveles obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Level"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Niveles"],
                "summary": "Crear nivel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "Piso 1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "Primer piso"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Nivel creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Level"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Nivel creado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/institutions/{institution}/levels/{level}": {
            "get": {
                "tags": ["Niveles"],
                "summary": "Obtener nivel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Level"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nivel obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Level"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Niveles"],
                "summary": "Actualizar nivel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Level"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Nivel actualizado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Level"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Nivel actualizado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Niveles"],
                "summary": "Eliminar nivel",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Level"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nivel eliminado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nivel eliminado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede eliminar el nivel",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El nivel no puede ser eliminado porque tiene salones relacionados."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/zones/{zone}/rooms": {
            "get": {
                "tags": ["Salas"],
                "summary": "Listar salas de una zona",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Zone"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    },
                    {
                        "$ref": "#/components/parameters/Code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Salas obtenidas exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Room"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Salas"],
                "summary": "Crear sala",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Zone"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name", "level_id"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "F-407"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "Salón de informatica"
                                    },
                                    "code": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "F-407"
                                    },
                                    "level_id": {
                                        "type": "integer",
                                        "example": 4
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sala creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Room"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sala creada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/institutions/{institution}/zones/{zone}/rooms/{room}": {
            "get": {
                "tags": ["Salas"],
                "summary": "Obtener sala",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Zone"
                    },
                    {
                        "$ref": "#/components/parameters/Room"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sala obtenida exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Room"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Salas"],
                "summary": "Actualizar sala",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Zone"
                    },
                    {
                        "$ref": "#/components/parameters/Room"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "code": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "level_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "zone_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sala actualizada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Room"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sala actualizada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Salas"],
                "summary": "Eliminar sala",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Zone"
                    },
                    {
                        "$ref": "#/components/parameters/Room"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sala eliminada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sala eliminada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/meet_points": {
            "get": {
                "tags": ["Puntos de encuentro"],
                "summary": "Listar puntos de encuentro de una institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Puntos de encuentro obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MeetPoint"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Puntos de encuentro"],
                "summary": "Crear punto de encuentro",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name", "zones"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "Parque de los estudiantes"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "Parque de los estudiantes"
                                    },
                                    "zones": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Punto de encuentro creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MeetPoint"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Punto de encuentro creado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/institutions/{institution}/meet_points/{meet_point}": {
            "get": {
                "tags": ["Puntos de encuentro"],
                "summary": "Obtener punto de encuentro",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/MeetPoint"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Punto de encuentro obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MeetPoint"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Puntos de encuentro"],
                "summary": "Actualizar punto de encuentro",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/MeetPoint"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "zones": {
                                        "type": "array",
                                        "nullable": true,
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Punto de encuentro actualizado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MeetPoint"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Punto de encuentro actualizado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Puntos de encuentro"],
                "summary": "Eliminar punto de encuentro",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/MeetPoint"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Punto de encuentro eliminado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Punto de encuentro eliminado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede eliminar el punto de encuentro",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El/La punto de encuentro no puede ser eliminado/a porque tiene recursos relacionados: zonas, brigadistas, incidentes."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations": {
            "get": {
                "tags": ["Situaciones de riesgo"],
                "summary": "Listar situaciones de riesgo de una institución",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Situaciones de riesgo obtenidas exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/RiskSituation"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Situaciones de riesgo"],
                "summary": "Crear situación de riesgo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name", "description"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "Incendio"
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "Incendio en alguna zona de la institución"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Situación de riesgo creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RiskSituation"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Situación de riesgo creada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations/{risk_situation}": {
            "get": {
                "tags": ["Situaciones de riesgo"],
                "summary": "Obtener situación de riesgo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Situación de riesgo obtenida exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RiskSituation"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Situaciones de riesgo"],
                "summary": "Actualizar situación de riesgo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Situación de riesgo actualizada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/RiskSituation"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Situación de riesgo actualizada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Situaciones de riesgo"],
                "summary": "Eliminar situación de riesgo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Situación de riesgo eliminada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Situación de riesgo eliminada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede eliminar la situación de riesgo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El/La situación de riesgo no puede ser eliminado/a porque tiene recursos relacionados: protocolos, incidentes."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations/{risk_situation}/protocols": {
            "get": {
                "tags": ["Protocolos"],
                "summary": "Listar protocolos de una situación de riesgo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Name"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Protocolos obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Protocol"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Protocolos"],
                "summary": "Crear protocolo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["name", "content"],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "¿Qué debería hacer durante un incendio?"
                                    },
                                    "content": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "Evite correr y gritar ya que puede alterar a las demás personas. Si el incendio está en su fase inicial y usted se encuentra capacitado en el uso de extintores, podrá sofocarlo haciendo uso de los equipos cercanos al área, de lo contrario, solicitar ayuda al brigadista o notificar a la extensión 123."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Protocolo creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Protocol"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Protocolo creado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations/{risk_situation}/protocols/{protocol}": {
            "get": {
                "tags": ["Protocolos"],
                "summary": "Obtener protocolo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Protocol"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Protocolo obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Protocol"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Protocolos"],
                "summary": "Actualizar protocolo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Protocol"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "nullable": true
                                    },
                                    "content": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "risk_situation_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Protocolo actualizado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Protocol"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Protocolo actualizado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Protocolos"],
                "summary": "Eliminar protocolo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Protocol"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Protocolo eliminado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Protocolo eliminado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations/{risk_situation}/incidents": {
            "get": {
                "tags": ["Incidentes"],
                "summary": "Listar incidentes de una situación de riesgo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/InitialDate"
                    },
                    {
                        "$ref": "#/components/parameters/FinalDate"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Incidentes obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Incident"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Incidentes"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "summary": "Crear incidente.\nEsta URI tiene como proposito ser llamada cuando se quiere indicar que un incidente ha comenzado, por tanto, al ser llamada la URI automaticamente el campo 'initial_date' se inicializa con la fecha y hora actual.\nAdicionalmente se valida que no haya un incidente activo, en caso de que ya exista uno, se retorna un 400.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Incidente creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Incident"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Incidente creado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede crear el incidente porque ya hay un incidente activo en la institución",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ya existe un incidente activo en la institución."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations/{risk_situation}/incidents/{incident}": {
            "get": {
                "tags": ["Incidentes"],
                "summary": "Obtener incidente",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Incidente obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Incident"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Incidentes"],
                "summary": "Actualizar incidente.\nEsta URI tiene como proposito ser llamada cuando se quiere indicar que un incidente ha terminado, por tanto, cuando sea llamada por primera vez, al incidente se le actualiza automaticamente el campo 'final_date' con la fecha y hora actual.\nSi se quiere actualizar un incidente luego de haber finalizado solo se podrá actualizar el campo 'description'.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Incidente actualizado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Incident"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Incidente actualizado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            },
            "delete": {
                "tags": ["Incidentes"],
                "summary": "Eliminar incidente",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Incidente eliminado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Incidente eliminado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede eliminar el incidente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El/La incidente no puede ser eliminado/a porque tiene recursos relacionados: reportes de usuarios, brigadistas y puntos de encuentro"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations/{risk_situation}/incidents/{incident}/user_reports": {
            "get": {
                "tags": ["Reportes de usuarios"],
                "summary": "Listar reportes de usuarios de un incidente",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reportes de usuarios obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserReport"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Reportes de usuarios"],
                "summary": "Crear reporte de usuario. El zone_id corresponde a la zona en la que se encuentra el usuario, si no se encuentra en ninguna zona, se puede enviar null.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["state"],
                                "properties": {
                                    "state": {
                                        "type": "string",
                                        "enum": ["safe", "at_risk", "outside"],
                                        "example": "safe"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Piso 2",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 100,
                                        "example": "Incendio en el piso 2",
                                        "nullable": true
                                    },
                                    "zone_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reporte de usuario creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserReport"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reporte de usuario creado exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede crear el reporte de usuario porque ya hay un reporte de usuario activo en el incidente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ya existe un reporte de usuario activo en el incidente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/Validation"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations/{risk_situation}/incidents/{incident}/user_reports/{user_report}": {
            "get": {
                "tags": ["Reportes de usuarios"],
                "summary": "Obtener reporte de usuario",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    },
                    {
                        "$ref": "#/components/parameters/UserReport"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reporte de usuario obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserReport"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "tags": ["Reportes de usuarios"],
                "summary": "Actualizar reporte de usuario. Este solo se podra actualizar mientras el incidente este activo, y el estado del reporte sea 'safe', pasando a 'at_risk', con la posibilidad de mencionar la localización y una descripción. Si el estado es 'at_risk' no se puede actualizar, se tedria que realizar el llamado a la URI de crear la resolución del reporte, y si el estado es 'outside' no se puede actualizar el reporte.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    },
                    {
                        "$ref": "#/components/parameters/UserReport"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["state"],
                                "properties": {
                                    "location": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "state": {
                                        "type": "string",
                                        "enum": ["at_risk"],
                                        "example": "safe"
                                    },
                                    "zone_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reporte de usuario actualizado exitosamente"
                    },
                    "400": {
                        "description": "Solo se puede actualizar el reporte mientras el incidente este activo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El/La reporte de usuario no puede ser actualizado/a porque el incidente ya ha finalizado."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No se puede actualizar el reporte de usuario porque el estado no es 'safe'",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El/La reporte de usuario no puede ser actualizado/a porque el estado no es 'safe'."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "El estado debe ser 'safe'."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Reportes de usuarios"],
                "summary": "Eliminar reporte de usuario",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    },
                    {
                        "$ref": "#/components/parameters/UserReport"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reporte de usuario eliminado exitosamente"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations/{risk_situation}/incidents/{incident}/user_reports/{user_report}/resolution": {
            "post": {
                "tags": ["Reportes de usuarios"],
                "summary": "Crear la resolución de un reporte, esta resolución solo puede ser creada por un brigadista, administrador o el mismo usuario que creo el reporte. La resolución se crea cuando el usuario se encontraba en riesgo y su situación ha sido atendida de alguna manera. (Ejemplo: El usuario se salvo o fue salvado; se encontro muerto; fue rescatado pero aún se encuentra en riesgo por sus heridas u otros motivos).",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    },
                    {
                        "$ref": "#/components/parameters/UserReport"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["state"],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "nullable": true,
                                        "example": "El usuario fue rescatado y se encuentra a salvo."
                                    },
                                    "state": {
                                        "type": "string",
                                        "enum": ["at_risk", "safe", "dead"],
                                        "example": "safe"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Resolución de reporte creada exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/UserReport"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Resolución de reporte creada exitosamente."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "El reporte ya ha sido resuelto",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El reporte ya ha sido resuelto."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "description": "No se puede realizar la resolución de un reporte donde el estado sea 'safe'",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No se puede crear la resolución del reporte porque el reporte indica que el usuario se encuentra a salvo."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "No se puede crear la resolución del reporte porque el reporte indica que el usuario se encuentra a salvo."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/brigadiers": {
            "post": {
                "tags": ["Brigadistas"],
                "summary": "Asignar a usuarios el rol de brigadista en la institución. A los usuarios con el rol de administrador no se les puede cambiar el rol, si viene un administardor en el array de usuarios se ignorara.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["users"],
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brigadistas asignados exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario asignado/a a Brigadista"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No se pueden asignar los brigadistas porque los ids de los usuarios no existen",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Los ids de los usuarios deben existir."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Los ids de los usuarios deben existir."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Brigadistas"],
                "summary": "Remover el rol de brigadista a usuarios en la institución. Estos quedan con el rol de usuario final.\nSi un brigadista tiene puntos de encuentro asociados se indicara con un 400 esto, a menos que en el query se envie el párametro force=1, que indica que se van a eliminar los registros de los puntos de encuentros asociados al brigadista.\nNota:A los usuarios con el rol de administrador no se les puede cambiar el rol, si viene un administardor en el array de usuarios se ignorara.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "name": "force",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["users"],
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Brigadistas removidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rol de brigadista removido/a exitosamente"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se pueden remover los brigadistas porque tienen puntos de encuentro asociados",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Hay brigadistas que tienen puntos de encuentro asociados"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "El usuario con el correo electrónico example@gmail.com tiene punto(s) de encuentro asignados"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No se pueden remover los brigadistas porque los usuarios son administradores",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El usuario con el correo electrónico example@gmail.com es un administrador"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "El usuario con el correo electrónico example@gmail.com es un administrador"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/brigadiers/{user}": {
            "post": {
                "tags": ["Brigadistas"],
                "summary": "Asignar un brigadista a un punto de encuentro fijo. El usuario debe tener el rol de brigadista",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/User"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["meet_point"],
                                "properties": {
                                    "meet_point": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brigadista asignado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Brigadista asignado/a exitosamente al punto de encuentro"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede asignar el brigadista al punto de encuentro",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El usuario ya está asignado a un punto de encuentro fijo"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "description": "No se puede asignar el brigadista al punto de encuentro porque el punto de encuentro no existe",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El campo meet_point debe existir."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "El campo meet_point debe existir."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/institutions/{institution}/meet_points/user/{user}": {
            "get": {
                "tags": ["Brigadistas"],
                "summary": "Obtener punto de encuentro fijo asignado a un brigadista",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/User"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Punto de encuentro obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MeetPoint"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/meet_points/user/{user}/incident/{incident}": {
            "get": {
                "tags": ["Brigadistas"],
                "summary": "Obtener punto de encuentro asignado a un brigadista en un incidente",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/User"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Punto de encuentro obtenido exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MeetPoint"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/risk_situations/{riskSituation}/incidents/{incident}/brigadiers": {
            "get": {
                "tags": ["Brigadistas"],
                "summary": "Obtener todos los brigadistas de uan institución que estan asignados a un punto de encuentro durante el incidente activo",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/RiskSituation"
                    },
                    {
                        "$ref": "#/components/parameters/Incident"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usuarios obtenidos exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/institutions/{institution}/meet_points/{meet_point}/assign": {
            "post": {
                "tags": ["Brigadistas"],
                "summary": "Asignar al brigadista autenticado a un punto de encuentro en el incidente activo. Un incidente activo es aquel que no tiene fecha de finalización",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    },
                    {
                        "$ref": "#/components/parameters/MeetPoint"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Brigadista asignado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Brigadista asignado/a exitosamente al punto de encuentro"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No se puede asignar el brigadista al punto de encuentro",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "El usuario ya está asignado a un punto de encuentro en el mismo incidente"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthenticated"
                    },
                    "403": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/institutions/{institution}/administrators": {
            "post": {
                "tags": ["Instituciones"],
                "summary": "Asignar a usuarios el rol de administrador en la institución. A los usuarios con el rol de brigadistas no se les asignar el rol de administradores, si viene un brigadista en el array de usuarios se ignorara.",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Institution"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["users"],
                                "properties": {
                                    "users": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Brigadistas asignados exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Usuario asignado/a a Administrador"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No se pueden asignar los administradores porque los ids de los usuarios no existen",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Los ids de los usuarios deben existir."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Los ids de los usuarios deben existir."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Role": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "Admin" },
                    "description": {
                        "type": "string",
                        "example": "Rol de administrador"
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "Carlos Andres" },
                    "last_name": { "type": "string", "example": "Páez" },
                    "email": {
                        "type": "string",
                        "example": "carlosa.paezc@autonoma.edu.co"
                    },
                    "id_card": { "type": "string", "example": "1234567890" },
                    "rhgb": { "type": "string", "example": "O+" },
                    "social_security": { "type": "string", "example": "SURA" },
                    "phone_number": {
                        "type": "string",
                        "example": "3108925614"
                    },
                    "is_active": { "type": "boolean", "example": true },
                    "code": { "type": "string", "example": "123456" },
                    "role_id": { "type": "integer", "example": 1 },
                    "photo_path": {
                        "type": "string",
                        "example": "/storage/users/1.jpg"
                    },
                    "secondary_emails": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "cheto59@gmail.com"
                        }
                    },
                    "role": {
                        "type": "object",
                        "$ref": "#/components/schemas/Role"
                    }
                }
            },
            "Institution": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "UAM" },
                    "description": {
                        "type": "string",
                        "example": "Universidad Autonoma de Manizales"
                    },
                    "is_active": { "type": "boolean", "example": true },
                    "active_incident": {
                        "type": "object",
                        "$ref": "#/components/schemas/RiskSituation"
                    }
                }
            },
            "Zone": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "Fundadores" },
                    "description": {
                        "type": "string",
                        "example": "Edificio Fundadores"
                    },
                    "institution_id": { "type": "integer", "example": 1 }
                }
            },
            "Level": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "Piso 1" },
                    "description": {
                        "type": "string",
                        "example": "Primer piso"
                    },
                    "institution_id": { "type": "integer", "example": 1 }
                }
            },
            "Room": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "F-407" },
                    "description": {
                        "type": "string",
                        "example": "SalÓn de informatica"
                    },
                    "code": { "type": "string", "example": "F-407" },
                    "zone_id": { "type": "integer", "example": 1 },
                    "level_id": { "type": "integer", "example": 4 },
                    "level": {
                        "type": "object",
                        "$ref": "#/components/schemas/Level"
                    },
                    "zone": {
                        "type": "object",
                        "$ref": "#/components/schemas/Zone"
                    }
                }
            },
            "MeetPoint": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": {
                        "type": "string",
                        "example": "Parque de los estudiantes"
                    },
                    "description": {
                        "type": "string",
                        "example": "Parque de los estudiantes"
                    },
                    "institution_id": { "type": "integer", "example": 1 },
                    "zones": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "$ref": "#/components/schemas/Zone"
                        }
                    }
                }
            },
            "RiskSituation": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "Incendio" },
                    "description": {
                        "type": "string",
                        "example": "Incendio en alguna zona"
                    },
                    "institution_id": { "type": "integer", "example": 1 }
                }
            },
            "Protocol": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": {
                        "type": "string",
                        "example": "¿Qué debería hacer durante un incendio?"
                    },
                    "content": {
                        "type": "string",
                        "example": "Evite correr y gritar ya que puede alterar a las demás personas. Si el incendio está en su fase inicial y usted se encuentra capacitado en el uso de extintores, podrá sofocarlo haciendo uso de los equipos cercanos al área, de lo contrario, solicitar ayuda al brigadista o notificar a la extensión 123."
                    },
                    "risk_situation_id": { "type": "integer", "example": 1 },
                    "risk_situation": {
                        "type": "object",
                        "$ref": "#/components/schemas/RiskSituation"
                    }
                }
            },
            "Incident": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "inital_date": {
                        "type": "string",
                        "example": "2024-10-10 10:00:00"
                    },
                    "final_date": {
                        "type": "string",
                        "example": "2024-10-10 12:00:00"
                    },
                    "description": {
                        "type": "string",
                        "example": "El edificio fundadores se incendió a causa de un corto circuito en el aula F-407"
                    },
                    "risk_situation_id": { "type": "integer", "example": 1 },
                    "informer_id": { "type": "integer", "example": 1 },
                    "informer": {
                        "type": "object",
                        "$ref": "#/components/schemas/User"
                    },
                    "risk_situation": {
                        "type": "object",
                        "$ref": "#/components/schemas/RiskSituation"
                    },
                    "user_reports": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "$ref": "#/components/schemas/UserReport"
                        }
                    },
                    "brigadiers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "brigadier": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/User"
                                },
                                "meet_point": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/MeetPoint"
                                }
                            }
                        }
                    }
                }
            },
            "UserReport": {
                "type": "object",
                "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "state": {
                        "type": "string",
                        "enum": ["safe", "at_risk", "outside"],
                        "example": "safe"
                    },
                    "location": {
                        "type": "string",
                        "example": "Manizales, Colombia"
                    },
                    "description": {
                        "type": "string",
                        "example": "Estoy bien"
                    },
                    "zone_id": { "type": "integer", "example": 1 },
                    "zone": {
                        "type": "object",
                        "$ref": "#/components/schemas/Zone"
                    },
                    "user_id": { "type": "integer", "example": 1 },
                    "incident_id": { "type": "integer", "example": 1 },
                    "user": {
                        "type": "object",
                        "$ref": "#/components/schemas/User"
                    },
                    "incident": {
                        "type": "object",
                        "$ref": "#/components/schemas/Incident"
                    },
                    "resolution": {
                        "type": "object",
                        "properties": {
                            "user_id": { "type": "integer", "example": 1 },
                            "user_report_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "state": {
                                "type": "string",
                                "enum": ["safe", "at_risk", "dead"],
                                "example": "safe"
                            },
                            "description": {
                                "type": "string",
                                "example": "El usuario fue rescatado y se encuentra a salvo."
                            }
                        }
                    }
                }
            },
            "Pagination": {
                "type": "object",
                "properties": {
                    "total": { "type": "integer", "example": 1 },
                    "per_page": { "type": "integer", "example": 1 },
                    "current_page": { "type": "integer", "example": 1 },
                    "total_pages": { "type": "integer", "example": 1 },
                    "last_page": { "type": "integer", "example": 1 },
                    "next_page_url": {
                        "type": "string",
                        "example": "http://localhost:8000/api/model?page=2"
                    },
                    "prev_page_url": { "type": "string", "example": null }
                }
            }
        },
        "responses": {
            "Unauthenticated": {
                "description": "No autenticado",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "No autenticado."
                                }
                            }
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "No autorizado",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "No autorizado."
                                }
                            }
                        }
                    }
                }
            },
            "NotFound": {
                "description": "No encontrado",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Recurso no encontrado"
                                }
                            }
                        }
                    }
                }
            },
            "Validation": {
                "description": "Error de validación",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "El campo nombre debe tener al menos 3 caracteres. (and 1 more errors)"
                                },
                                "errors": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "El campo descripción debe ser una cadena de texto."
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "parameters": {
            "Role": {
                "name": "role",
                "in": "path",
                "description": "ID del rol",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "User": {
                "name": "user",
                "in": "path",
                "description": "ID del usuario",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "Institution": {
                "name": "institution",
                "in": "path",
                "description": "ID de la institución",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "InstitutionQuery": {
                "name": "institution",
                "in": "query",
                "description": "ID de la institución",
                "required": false,
                "schema": {
                    "type": "integer"
                }
            },
            "Zone": {
                "name": "zone",
                "in": "path",
                "description": "ID de la zona",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "Level": {
                "name": "level",
                "in": "path",
                "description": "ID del nivel",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "Room": {
                "name": "room",
                "in": "path",
                "description": "ID de la sala",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "MeetPoint": {
                "name": "meet_point",
                "in": "path",
                "description": "ID del punto de encuentro",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "RiskSituation": {
                "name": "risk_situation",
                "in": "path",
                "description": "ID de la situación de riesgo",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "Protocol": {
                "name": "protocol",
                "in": "path",
                "description": "ID del protocolo",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "Incident": {
                "name": "incident",
                "in": "path",
                "description": "ID del incidente",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "UserReport": {
                "name": "user_report",
                "in": "path",
                "description": "ID del reporte de usuario",
                "required": true,
                "schema": {
                    "type": "integer"
                },
                "style": "simple"
            },
            "PerPage": {
                "name": "per_page",
                "in": "query",
                "description": "Número de elementos por página. Sino se especifica se enviaran todos los elementos",
                "required": false,
                "schema": {
                    "type": "integer"
                },
                "style": "form"
            },
            "Name": {
                "name": "name",
                "in": "query",
                "description": "Filtrar por nombre",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "style": "form"
            },
            "LastName": {
                "name": "last_name",
                "in": "query",
                "description": "Filtrar por apellido",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "style": "form"
            },
            "Email": {
                "name": "email",
                "in": "query",
                "description": "Filtrar por correo",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "style": "form"
            },
            "IDCard": {
                "name": "id_card",
                "in": "query",
                "description": "Filtrar por cédula",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "style": "form"
            },
            "RHGB": {
                "name": "rhgb",
                "in": "query",
                "description": "Filtrar por RHGB",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "style": "form"
            },
            "SocialSecurity": {
                "name": "social_security",
                "in": "query",
                "description": "Filtrar por EPS",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "style": "form"
            },
            "PhoneNumber": {
                "name": "phone_number",
                "in": "query",
                "description": "Filtrar por número de teléfono",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "style": "form"
            },
            "IsActive": {
                "name": "is_active",
                "in": "query",
                "description": "Filtrar por estado",
                "required": false,
                "schema": {
                    "type": "boolean"
                },
                "style": "form"
            },
            "Code": {
                "name": "code",
                "in": "query",
                "description": "Filtrar por código",
                "required": false,
                "schema": {
                    "type": "string"
                },
                "style": "form"
            },
            "RoleID": {
                "name": "role_id",
                "in": "query",
                "description": "Filtrar por ID del rol",
                "required": false,
                "schema": {
                    "type": "integer"
                },
                "style": "form"
            },
            "InitialDate": {
                "name": "initial_date",
                "in": "query",
                "description": "Filtrar por fecha de inicio",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "date-time"
                },
                "style": "form"
            },
            "FinalDate": {
                "name": "final_date",
                "in": "query",
                "description": "Filtrar por fecha de finalización",
                "required": false,
                "schema": {
                    "type": "string",
                    "format": "date-time"
                },
                "style": "form"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
